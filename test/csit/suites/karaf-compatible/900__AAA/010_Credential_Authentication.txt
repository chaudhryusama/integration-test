*** Settings ***
Documentation     AAA System Tests
Suite Setup       Credential Authentication Suite Setup
Suite Teardown    Credential Authentication Suite Teardown
Library           Collections
Library           OperatingSystem
Library           String
Library           HttpLibrary.HTTP
Library           ../../../libraries/RequestsLibrary.py
Library           ../../../libraries/Common.py
Resource          ../../../libraries/Utils.txt
Variables         ../../../variables/Variables.py
Resource          ../../../libraries/AAAKeywords.txt

*** Variables ***

*** Test Cases ***
Get Token With Valid Username And Password
    [Documentation]    Sanity test to ensure default user/password can get a token
    ${auth_data}=    Create Auth Data    ${USER}    ${PWD}
    ${resp}=    AAA Login    ${CONTROLLER}    ${auth_data}
    ${auth_token}=    Extract Value From Content    ${resp.content}    /access_token    strip
    Should Be String    ${auth_token}
    Log    Token: ${auth_token}
    Should Be Equal As Strings    ${resp.status_code}    201
    Validate Token Format    ${auth_token}

Fail To Get Token With Invalid Username And Password
    [Documentation]    Negative test to verify invalid user/password is denied a token
    ${bad_user}=    Set Variable    notTheAdmin
    ${auth_data}=    Create Auth Data    ${bad_user}    notTheAdminPassword
    ${resp}=    AAA Login    ${CONTROLLER}    ${auth_data}
    Should Be Equal As Strings    ${resp.status_code}    401
    Log    ${resp.content}
    ${error_msg}=    Extract Value From Content    ${resp.content}    /error    strip
    Should Be Equal As Strings    ${error_msg}    User :${bad_user} does not exist

Create Token with Client Authorization
    [Documentation]    Get a token using client domain
    ${auth_data}=    Create Auth Data    ${USER}    ${PWD}    ${SCOPE}    dlux    secrete
    ${resp}=    AAA Login    ${CONTROLLER}    ${auth_data}
    ${auth_token}=    Extract Value From Content    ${resp.content}    /access_token    strip
    Should Be String    ${auth_token}
    Log    Token: ${auth_token}
    Should Be Equal As Strings    ${resp.status_code}    201
    Validate Token Format    ${auth_token}

Token Authentication In REST Request
    [Documentation]    Use a token to make a successful REST transaction
    ${auth_data}=    Create Auth Data    ${USER}    ${PWD}
    ${resp}=    AAA Login    ${CONTROLLER}    ${auth_data}
    ${auth_token}=    Extract Value From Content    ${resp.content}    /access_token    strip
    Create Session    ODL_SESSION    http://${CONTROLLER}:8181
    ${headers}=    Create Dictionary    Content-Type    application/x-www-form-urlencoded
    Set To Dictionary    ${headers}    Authorization    Bearer ${auth_token}
    ${resp}=    RequestsLibrary.GET    ODL_SESSION    ${OPERATIONAL_NODES_API}    headers=${headers}
    Log    STATUS_CODE: ${resp.status_code} CONTENT: ${resp.content}
    Should Be Equal As Strings    ${resp.status_code}    200
    Should Contain    ${resp.content}    nodes

Revoke Token
    [Documentation]    negative test to revoke valid token and check that REST transaction fails
    ${auth_data}=    Create Auth Data    ${USER}    ${PWD}
    ${resp}=    AAA Login    ${CONTROLLER}    ${auth_data}
    ${auth_token}=    Extract Value From Content    ${resp.content}    /access_token    strip
    Create Session    ODL_SESSION    http://${CONTROLLER}:8181
    ${headers}=    Create Dictionary    Content-Type    application/x-www-form-urlencoded
    Set To Dictionary    ${headers}    Authorization    Bearer ${auth_token}
    ${resp}=    RequestsLibrary.GET    ODL_SESSION    ${OPERATIONAL_NODES_API}    headers=${headers}
    Log    STATUS_CODE: ${resp.status_code} CONTENT: ${resp.content}
    Should Be Equal As Strings    ${resp.status_code}    200
    Should Contain    ${resp.content}    nodes
    ${headers}=    Create Dictionary    Content-Type    application/x-www-form-urlencoded
    ${resp}=    RequestsLibrary.POST    ODL_SESSION    ${REVOKE_TOKEN_API}    data=${auth_token}    headers=${headers}
    Should Be Equal As Strings    ${resp.status_code}    204
    Set To Dictionary    ${headers}    Authorization    Bearer ${auth_token}
    ${resp}=    RequestsLibrary.GET    ODL_SESSION    ${OPERATIONAL_NODES_API}    headers=${headers}
    Log    STATUS_CODE: ${resp.status_code} CONTENT: ${resp.content}
    Should Be Equal As Strings    ${resp.status_code}    401

*** Keywords ***
Credential Authentication Suite Setup
    Log    Suite Setup

Credential Authentication Suite Teardown
    Log    Suite Teardown
    Delete All Sessions
